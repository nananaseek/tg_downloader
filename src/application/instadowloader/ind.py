import instaloader
import sys
import os
import re # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –º–æ–¥—É–ª—å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —Ä–µ–≥—É–ª—è—Ä–Ω–∏–º–∏ –≤–∏—Ä–∞–∑–∞–º–∏

# –í–∞—à –ª–æ–≥—ñ–Ω –≤ Instagram (–æ–±–æ–≤'—è–∑–∫–æ–≤–æ –∑–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Å–≤—ñ–π)
# –°–∫—Ä–∏–ø—Ç —à—É–∫–∞—Ç–∏–º–µ —Ñ–∞–π–ª —Å–µ—Å—ñ—ó –∑ —Ü–∏–º —ñ–º–µ–Ω–µ–º


class InstagramDownloader:

    def __init__(self, url) -> None:
        self.INSTAGRAM_USERNAME = "etseoo"
        self.L = instaloader.Instaloader(
                    download_pictures=False,       # –ù–µ –∑–∞–≤–∞–Ω—Ç–∞–∂—É–≤–∞—Ç–∏ –æ–±–∫–ª–∞–¥–∏–Ω–∫—É/–ø–æ—Å—Ç–µ—Ä
                    download_videos=True,          # –ó–∞–≤–∞–Ω—Ç–∞–∂—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –≤—ñ–¥–µ–æ
                    download_video_thumbnails=False, # –ù–µ –∑–∞–≤–∞–Ω—Ç–∞–∂—É–≤–∞—Ç–∏ –ø—Ä–µ–≤'—é
                    download_geotags=False,
                    download_comments=False,
                    save_metadata=False,           # –ù–µ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –º–µ—Ç–∞–¥–∞–Ω—ñ —É .json —Ñ–∞–π–ª–∞—Ö
                    compress_json=False,
                    post_metadata_txt_pattern=None
                )
        self.url = url
        
    def download_media_by_url(self):
        """
    –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –±—É–¥—å-—è–∫–∏–π –º–µ–¥—ñ–∞-–∫–æ–Ω—Ç–µ–Ω—Ç (Reel, –ø–æ—Å—Ç, IGTV) –∑ Instagram –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º.
        """
        # –°—Ç–≤–æ—Ä—é—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä Instaloader –∑ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏
        
    
        print("-> –°–ø—Ä–æ–±–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å–µ—Å—ñ—é...")
        try:
            self.L.load_session_from_file(self.INSTAGRAM_USERNAME)
            print(f"‚úÖ –°–µ—Å—ñ—é –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ '{self.INSTAGRAM_USERNAME}' —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ.")
        except FileNotFoundError:
            print(f"‚ö†Ô∏è –§–∞–π–ª —Å–µ—Å—ñ—ó –¥–ª—è '{self.INSTAGRAM_USERNAME}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
            print("   –î–ª—è –Ω–∞–¥—ñ–π–Ω–æ—ó —Ä–æ–±–æ—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Å–µ—Å—ñ—é –∫–æ–º–∞–Ω–¥–æ—é: instaloader --login=" + self.INSTAGRAM_USERNAME)
    
        # –£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π –ø–∞—Ç–µ—Ä–Ω –¥–ª—è –≤–∏–ª—É—á–µ–Ω–Ω—è shortcode –∑ URL (–¥–ª—è /p/, /reel/, /tv/)
        match = re.search(r"/(?:p|reel|tv)/([^/]+)", self.url)
        if not match:
            print("‚ùå –ü–æ–º–∏–ª–∫–∞: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è.")
            print("   –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤–µ–¥–µ –Ω–∞ –ø–æ—Å—Ç, Reel –∞–±–æ IGTV.")
            return False
    
        shortcode = match.group(1)
    
        try:
            print(f"\nüîó –û—Ç—Ä–∏–º—É—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–æ—Å—Ç (shortcode: {shortcode})")
            post = instaloader.Post.from_shortcode(self.L.context, shortcode)

            # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–∞–ø–∫—É "downloads", —è–∫—â–æ —ó—ó –Ω–µ–º–∞—î
            output_dir = "reels_downloads"
            if not os.path.exists(output_dir):
                os.makedirs(output_dir)
    
            # –ó–∞–¥–∞—î–º–æ –∫–∞—Å—Ç–æ–º–Ω–∏–π —à–∞–±–ª–æ–Ω –¥–ª—è —ñ–º–µ–Ω—ñ —Ñ–∞–π–ª—É: {owner_username}_{shortcode}.{ext}
            self.L.filename_pattern = f"{post.owner_username}_{post.shortcode}"
    
            print(f"üì• –ü–æ—á–∏–Ω–∞—é –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —É –ø–∞–ø–∫—É '{output_dir}'...")
    
            # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ø–æ—Å—Ç —É –≤–∫–∞–∑–∞–Ω—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é
            result: bool = self.L.download_post(post, target=output_dir)
    
            print(f"\n‚úÖ –ì–æ—Ç–æ–≤–æ! –í—ñ–¥–µ–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É –ø–∞–ø—Ü—ñ '{os.path.abspath(output_dir)}'.")
            
    
        except instaloader.exceptions.BadResponseException as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É: {e}. –ú–æ–∂–ª–∏–≤–æ, –ø–æ—Å—Ç –ø—Ä–∏–≤–∞—Ç–Ω–∏–π, –≤–∏–¥–∞–ª–µ–Ω–∏–π –∞–±–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–µ–≤—ñ—Ä–Ω–µ.")
            return False
        except instaloader.exceptions.PrivateProfileNotFollowedException:
            print("‚ùå –ü–æ–º–∏–ª–∫–∞: –ü—Ä–æ—Ñ—ñ–ª—å –ø—Ä–∏–≤–∞—Ç–Ω–∏–π, —ñ –≤–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ –∞–±–æ –Ω–µ –ø—ñ–¥–ø–∏—Å–∞–Ω—ñ –Ω–∞ –Ω—å–æ–≥–æ.")
            return False
        except Exception as e:
            print(f"‚ùå –í–∏–Ω–∏–∫–ª–∞ –Ω–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
            return False
        else:
            print("‚úÖ –í—Å—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
            return result
    
    
    async def remove_temp_dir(self, path: str):
        
        print(f"‚è≥ –í–∏–¥–∞–ª–µ–Ω–Ω—è —Ñ–∞–π–ª—É '{path}'...")
        
        # await asyncio.sleep(2)
        
        try:
            if os.path.exists(path):
                os.remove(path)
                print(f"‚úÖ –§–∞–π–ª '{path}' –≤–∏–¥–∞–ª–µ–Ω–æ.")
            else:
                print("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ: –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ: {e}")
    
if __name__ == "__main__":
    if len(sys.argv) > 1:
        media_url = sys.argv[1]
    else:
        media_url = input("–í–≤–µ–¥—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ Reel (–∞–±–æ –ø–æ—Å—Ç) –≤ Instagram: ")

    if not media_url.strip():
        print("–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ–º.")
    else:
        Inst = InstagramDownloader(url=media_url)
        Inst.download_media_by_url()